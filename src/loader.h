#pragma once

GLfloat vBackground[] = {
     1.0f,  1.0f, 0.0f,   0.1f, 0.1f, 0.1f,
     1.0f, -1.0f, 0.0f,   0.3f, 0.3f, 0.3f,
    -1.0f, -1.0f, 0.0f,   0.3f, 0.3f, 0.3f,
    -1.0f,  1.0f, 0.0f,   0.1f, 0.1f, 0.1f,
};

GLfloat* vGrid = new GLfloat[12*11];

void InitGrid(float fGridMax = 0.75f, unsigned int uCount = 11) {
    float step = (fGridMax*2)/(uCount-1);
    for (unsigned int i = 0; i < uCount; i++) {
        unsigned int k = i*12;
        float pos = fGridMax-(step*i);
        vGrid[k]    = -fGridMax;
        vGrid[k+3]  =  fGridMax;
        vGrid[k+1]  =  0.0f;
        vGrid[k+4]  =  0.0f;
        vGrid[k+2]  =  pos;
        vGrid[k+5]  =  pos;

        vGrid[k+6]  =  pos;
        vGrid[k+9]  =  pos;
        vGrid[k+7]  =  0.0f;
        vGrid[k+10] =  0.0f;
        vGrid[k+8]  = -fGridMax;
        vGrid[k+11] =  fGridMax;
    }
}

GLfloat vCube[] {
     // Левая сторона
    -1.0f, -1.0f,  1.0f,     // 1
    -1.0f,  1.0f,  1.0f,     // 2
    -1.0f,  1.0f, -1.0f,     // 3
    -1.0f, -1.0f,  1.0f,     // 1
    -1.0f,  1.0f, -1.0f,     // 3
    -1.0f, -1.0f, -1.0f,     // 4
     // Верхняя сторона
    -1.0f,  1.0f,  1.0f,     // 2
    -1.0f,  1.0f, -1.0f,     // 3
     1.0f,  1.0f,  1.0f,     // 7
    -1.0f,  1.0f, -1.0f,     // 3
     1.0f,  1.0f,  1.0f,     // 7
     1.0f,  1.0f, -1.0f,     // 8
     // Правая сторона
     1.0f, -1.0f, -1.0f,     // 5
     1.0f, -1.0f,  1.0f,     // 6
     1.0f,  1.0f, -1.0f,     // 8
     1.0f, -1.0f,  1.0f,     // 6
     1.0f,  1.0f,  1.0f,     // 7
     1.0f,  1.0f, -1.0f,     // 8
     // Нижняя сторона
    -1.0f, -1.0f,  1.0f,     // 1
    -1.0f, -1.0f, -1.0f,     // 4
     1.0f, -1.0f, -1.0f,     // 5
    -1.0f, -1.0f,  1.0f,     // 1
     1.0f, -1.0f, -1.0f,     // 5
     1.0f, -1.0f,  1.0f,     // 6
     // Передняя сторона
    -1.0f, -1.0f,  1.0f,     // 1
    -1.0f,  1.0f,  1.0f,     // 2
     1.0f,  1.0f,  1.0f,     // 7
    -1.0f, -1.0f,  1.0f,     // 1
     1.0f, -1.0f,  1.0f,     // 6
     1.0f,  1.0f,  1.0f,     // 7
     // Задняя сторона
    -1.0f,  1.0f, -1.0f,     // 3   
    -1.0f, -1.0f, -1.0f,     // 4
     1.0f, -1.0f, -1.0f,     // 5
    -1.0f,  1.0f, -1.0f,     // 3
     1.0f, -1.0f, -1.0f,     // 5
     1.0f,  1.0f, -1.0f      // 8
};

float vCubeTexture[] = {
     // Левая сторона
    -1.0f,  1.0f,  1.0f,    1.0f, 0.0f,
    -1.0f,  1.0f, -1.0f,    1.0f, 1.0f,
    -1.0f, -1.0f, -1.0f,    0.0f, 1.0f,
    -1.0f, -1.0f, -1.0f,    0.0f, 1.0f,
    -1.0f, -1.0f,  1.0f,    0.0f, 0.0f,
    -1.0f,  1.0f,  1.0f,    1.0f, 0.0f,
     // Правая сторона
     1.0f,  1.0f,  1.0f,    1.0f, 0.0f,
     1.0f,  1.0f, -1.0f,    1.0f, 1.0f,
     1.0f, -1.0f, -1.0f,    0.0f, 1.0f,
     1.0f, -1.0f, -1.0f,    0.0f, 1.0f,
     1.0f, -1.0f,  1.0f,    0.0f, 0.0f,
     1.0f,  1.0f,  1.0f,    1.0f, 0.0f,
     // Верхняя сторона
    -1.0f,  1.0f, -1.0f,    0.0f, 1.0f,
     1.0f,  1.0f, -1.0f,    1.0f, 1.0f,
     1.0f,  1.0f,  1.0f,    1.0f, 0.0f,
     1.0f,  1.0f,  1.0f,    1.0f, 0.0f,
    -1.0f,  1.0f,  1.0f,    0.0f, 0.0f,
    -1.0f,  1.0f, -1.0f,    0.0f, 1.0f,
     // Нижняя сторона
    -1.0f, -1.0f, -1.0f,    0.0f, 1.0f,
     1.0f, -1.0f, -1.0f,    1.0f, 1.0f,
     1.0f, -1.0f,  1.0f,    1.0f, 0.0f,
     1.0f, -1.0f,  1.0f,    1.0f, 0.0f,
    -1.0f, -1.0f,  1.0f,    0.0f, 0.0f,
    -1.0f, -1.0f, -1.0f,    0.0f, 1.0f,
     // Передняя сторона 
    -1.0f, -1.0f,  1.0f,    0.0f, 0.0f,
     1.0f, -1.0f,  1.0f,    1.0f, 0.0f,
     1.0f,  1.0f,  1.0f,    1.0f, 1.0f,
     1.0f,  1.0f,  1.0f,    1.0f, 1.0f,
    -1.0f,  1.0f,  1.0f,    0.0f, 1.0f,
    -1.0f, -1.0f,  1.0f,    0.0f, 0.0f,
     // Задняя сторона
    -1.0f, -1.0f, -1.0f,    0.0f, 0.0f,
     1.0f, -1.0f, -1.0f,    1.0f, 0.0f,
     1.0f,  1.0f, -1.0f,    1.0f, 1.0f,
     1.0f,  1.0f, -1.0f,    1.0f, 1.0f,
    -1.0f,  1.0f, -1.0f,    0.0f, 1.0f,
    -1.0f, -1.0f, -1.0f,    0.0f, 0.0f
};